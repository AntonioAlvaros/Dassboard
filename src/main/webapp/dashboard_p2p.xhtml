<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:of="http://omnifaces.org/functions"
                 xmlns:o="http://omnifaces.org/ui"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="title">Dasboard Transaccional</ui:define>

   <ui:define name="head">
        <script type="text/javascript">
        function skinChart() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#03A9F4', '#E91E63', '#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                borderWidth: 0.1,
                borderColor: 'bdbdbd',
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 1,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinBar() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                borderWidth: 0.1,
                borderColor: 'bdbdbd',
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 1,
                renderer: $.jqplot.BarRenderer,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinArea() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#FFC107', '#4CAF50'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                borderWidth: 0.1,
                borderColor: 'bdbdbd',
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 1,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinBubble() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 1,
                renderer: $.jqplot.BubbleRenderer,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinZoom() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 1,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinPie() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#03A9F4', '#E91E63', '#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                rendererOptions: {
                    textColor: '#666F77',
                }
            };
            this.cfg.seriesDefaults = {
                renderer: $.jqplot.PieRenderer,
                shadow: false,
                lineWidth: 1,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinDonut() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#03A9F4', '#E91E63', '#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                rendererOptions: {
                    textColor: '#666F77',
                }
            };
            this.cfg.seriesDefaults = {
                renderer: $.jqplot.DonutRenderer,
                shadow: false,
                lineWidth: 1,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinBarAndLine() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#03A9F4', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                borderWidth: 0.1,
                borderColor: 'bdbdbd',
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 5,
                renderer: $.jqplot.BarRenderer,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }

        function skinMeterGauge() {
            this.cfg.title = '';
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth: 5,
                renderer: $.jqplot.MeterGaugeRenderer,
                rendererOptions: {
                    shadow: false,
                    min: 100,
                    max: 800,
                    intervals: [200, 300, 400, 500, 600, 700, 800],
                    intervalColors: ['#03A9F4', '#E91E63', '#4CAF50', '#FFC107', '#03A9F4', '#E91E63', '#4CAF50']
                }
            }
        }

        function skinMultiAxis() {
            this.cfg.shadow = false;
            this.cfg.title = '';
            this.cfg.seriesColors = ['#4CAF50', '#FFC107'];
            this.cfg.grid = {
                background: '#ffffff',
                borderColor: '#ffffff',
                gridLineColor: '#F5F5F5',
                shadow: false
            };
            this.cfg.axesDefaults = {
                borderWidth: 0.1,
                borderColor: 'bdbdbd',
                rendererOptions: {
                    textColor: '#666F77'
                }
            };
            this.cfg.seriesDefaults = {
                shadow: false,
                lineWidth:1,
                renderer: $.jqplot.BarRenderer,
                markerOptions: {
                    shadow: false,
                    size: 7,
                    style: 'circle'
                }
            }
        }
        </script>
        <style type="text/css">
            .jqplot-xaxis-label, .jqplot-yaxis-label, .jqplot-y2axis-label, .jqplot-x2axis-label {
                color: #757575; 
            }
            
            table.jqplot-table-legend {
                background-color: #ffffff;
                color: #757575;
                border-color: #bdbdbd;
            }
        </style>
    </ui:define>

    
    <ui:define name="content">
        
<p:tooltip />

   <div>
        <p:messages id="messages" showDetail="true" closable="true"> 
            <p:autoUpdate/>
        </p:messages>
       
       <p:growl id="growl" showDetail="true" sticky="true" /> 
             
       
       
        </div>

        
        <div class="ui-g dashboard">
            
                 <div class="ui-g-12 ui-md-6 ui-lg-3">
                <div class="ui-g card colorbox colorbox-1">
                    <div class="ui-g-4">
                        <i class="material-icons">&#xE86C;</i>
                    </div>
                    <div class="ui-g-8">
                        <span class="colorbox-name">Aprobadas</span>
           
                   <h1><h:panelGroup class="colorbox-count" id="countp2p">#{pollViewP2P.count}</h:panelGroup></h1>

                   <script>
                       function updateCounter(newvalue) {
                           //$("#count").text(newvalue);
                           document.getElementById("countp2p").innerHTML = newvalue;
                       }

                       function onclosePush(code) {
                           if (code == -1) {
                               alert("Oops! Your browser doesn't seem to support web sockets. The push functionality won't work.")
                           }
                           else if (code != 1000) {
                               alert("Oops! Push has stopped working with error code " + code + "! Reload the page.")
                           }
                       }
                   </script>
                   <o:socket channel="counterP2P" onmessage="updateCounter" onclose="onclosePush" connected="true" />
                           
     
                    </div>
                </div>
            </div>
            <div class="ui-g-12 ui-md-6 ui-lg-3">
                <div class="ui-g card colorbox colorbox-2">
                    <div class="ui-g-4">
                        <i class="material-icons">&#xe565;</i>
                    </div>
                    <div class="ui-g-8">
                        <span class="colorbox-name">Reversadas</span>
                           <h1><h:panelGroup class="colorbox-count" id="countReversep2p">#{pollViewP2P.countReverse}</h:panelGroup></h1>

                   <script>
                       function updateCounterReverse(newvalue) {
                           //$("#count").text(newvalue);
                           document.getElementById("countReversep2p").innerHTML = newvalue;
                       }

                       function onclosePush(code) {
                           if (code == -1) {
                               alert("Oops! Your browser doesn't seem to support web sockets. The push functionality won't work.")
                           }
                           else if (code != 1000) {
                               alert("Oops! Push has stopped working with error code " + code + "! Reload the page.")
                           }
                       }
                   </script>
                   <o:socket channel="counterReverseP2P" onmessage="updateCounterReverse" onclose="onclosePush" connected="true" />
                           
                    </div>
                </div>
            </div>
            <div class="ui-g-12 ui-md-6 ui-lg-3">
                <div class="ui-g card colorbox colorbox-3">
                    <div class="ui-g-4">
                        <i class="material-icons">&#xE160;</i>
                    </div>
                    <div class="ui-g-8">
                        <span class="colorbox-name">Rechazadas</span>
                                 <h1><h:panelGroup class="colorbox-count" id="countRejectp2p">#{pollViewP2P.countReject}</h:panelGroup></h1>

                   <script>
                       function updateCounterReject(newvalue) {
                           //$("#count").text(newvalue);
                           document.getElementById("countRejectp2p").innerHTML = newvalue;
                       }

                       function onclosePush(code) {
                           if (code == -1) {
                               alert("Oops! Your browser doesn't seem to support web sockets. The push functionality won't work.")
                           }
                           else if (code != 1000) {
                               alert("Oops! Push has stopped working with error code " + code + "! Reload the page.")
                           }
                       }
                   </script>
                   <o:socket channel="counterRejectP2P" onmessage="updateCounterReject" onclose="onclosePush" connected="true" />
                           
                        
                        
                    </div>
                </div>
            </div>
            <div class="ui-g-12 ui-md-6 ui-lg-3">
                <div class="ui-g card colorbox colorbox-4">
                    <div class="ui-g-4">
                        <i class="material-icons">&#xe426;</i>
                    </div>
                    <div class="ui-g-8">
                        <span class="colorbox-name">Time Out</span>
                        
                        
                                   <h1><h:panelGroup class="colorbox-count" id="countTimeOutp2p">#{pollViewP2P.countTimeOut}</h:panelGroup></h1>

                   <script>
                       function updateCounterTimeOut(newvalue) {
                           //$("#count").text(newvalue);
                           document.getElementById("countTimeOutp2p").innerHTML = newvalue;
                       }

                       function onclosePush(code) {
                           if (code == -1) {
                               alert("Oops! Your browser doesn't seem to support web sockets. The push functionality won't work.")
                           }
                           else if (code != 1000) {
                               alert("Oops! Push has stopped working with error code " + code + "! Reload the page.")
                           }
                       }
                   </script>
                   <o:socket channel="counterTimeOutP2P" onmessage="updateCounterTimeOut" onclose="onclosePush" connected="true" />
                           
                        
                        
                        
                    </div>
                </div>
            </div>
            
             <div class="ui-g-12 ui-md-4">
                <div class="card">
                    <h1 class="centerText">Motivos de Rechazos</h1>
                    <p:poll interval="5" update="pie" />
                    <p:chart id="pie" type="pie" model="#{chartDemoViewP2P.pieModel1}" responsive="true" />
                </div>
             </div>
            
            <div class="ui-g-12 ui-md-4">
                <div class="card">
                    <h1 class="centerText">Transacciones por Interfaces</h1>
                     <p:poll interval="5" update="bar" />
                    <p:chart id="bar" type="bar" model="#{chartDemoViewP2P.barModel}" responsive="true"/>
                </div>
             </div>
            
               <div class="ui-g-12 ui-md-4">
                <div class="card">
                    <h1 class="centerText">Ultimos 3 Meses</h1>
                     <p:poll interval="10" update="bar2" />
                    <p:chart id="bar2" type="bar" model="#{chartDemoViewP2P.barModel1}" responsive="true"/>
                </div>
             </div>
 
            <div class="ui-g-12 ui-md-4">
                <div class="card overview">
                    <div class="overview-content clearfix">
                        <span class="overview-title">Transacciones Aprobadas</span>
                        <span class="overview-badge">Monto</span>
                       <span class="overview-detail">                        
                            <h:outputText class="txt_count_amount-count"  id="txt_count_amount" value="#{pollViewP2P.sumApproved}">                       
                                
                                         <f:convertNumber pattern="#000,000.00" />
                            </h:outputText>
                                
                        </span>
                         

                         <p:poll  interval="2" listener="#{pollViewP2P.increment}" update="txt_count_amount"/>
                        
                        
                    </div>
                    <div class="overview-footer">
                         <p:graphicImage name="images/dashboard/progress-approved.svg" library="ultima-layout" style="width: 100%" />
                    </div>
                </div>
            </div>
            <div class="ui-g-12 ui-md-4">
                <div class="card overview">
                    <div class="overview-content clearfix">
                        <span class="overview-title">Transacciones Rechazadas</span>
                        <span class="overview-badge">Monto</span>
                                  <span class="overview-detail">                        
                                      <h:outputText class="txt_count_amount-count"  id="txt_count_amount_reject" value="#{pollViewP2P.sumReject}">                       
                                           <f:convertNumber pattern="#000,000.00" />
                            </h:outputText>
                        </span>
                         

                         <p:poll  interval="2" listener="#{pollViewP2P.increment}" update="txt_count_amount_reject"/>
                         
                         
                         
                        
                    </div>
                    <div class="overview-footer">
                        <p:graphicImage name="images/dashboard/progress-reject.svg" library="ultima-layout" style="width: 100%" />
                    </div>
                </div>
            </div>
            <div class="ui-g-12 ui-md-4">
                <div class="card overview">
                    <div class="overview-content clearfix">
                        <span class="overview-title">Transaciones Reversadas</span>
                        <span class="overview-badge">Monto</span>
                                        <span class="overview-detail">                        
                                            <h:outputText class="txt_count_amount-count"  id="txt_count_amount_reverse" value="#{pollViewP2P.sumReversed}">    
                                                    <f:convertNumber pattern="#000,000.00" />
                                                </h:outputText>
                        </span>
                         

                         <p:poll  interval="3" listener="#{pollViewP2P.increment}" update="txt_count_amount_reverse"/>
                        
                    </div>
                    <div class="overview-footer">
                        <p:graphicImage name="images/dashboard/progress-reversed.svg" library="ultima-layout" style="width: 100%" />
                    </div>
                </div>
            </div>
        </div>
    </ui:define>
</ui:composition>